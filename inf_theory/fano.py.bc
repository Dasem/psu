#!/usr/bin/env python
import operator 
import math
import time

def splitter(orig_dict):
    sort_keys = sorted(orig_dict.items(),key = operator.itemgetter(1), reverse = True)

    print(sort_keys)

    first_half = dict()
    second_half = dict()
    
    summ = 0

    for dig in orig_dict.values():
        summ+=dig
    
    summ_prob = 0

    for char in orig_dict:
        if summ_prob < summ/2:
            summ_prob += orig_dict[char]
            first_half[char]=orig_dict[char]
        else:
            second_half[char]=orig_dict[char]

    print('orig_dict:',orig_dict)
    print('first_half: ', first_half, 'second_half', second_half)
    time.sleep(1)

    return first_half, second_half

def fano(minecraft):
    first_half, second_half = splitter(minecraft)
    global dict_code

    for char in first_half:
        dict_code[char]+='1'
    for char in second_half:
        dict_code[char]+='0'

    if len(first_half)>1:
        fano(first_half)
    if len(second_half)>1:
        fano(second_half)


f = open('fano_original', 'r')
dict_code=dict()

dicto = dict()

count = 0

for line in f:
    for char in line:
        count+=1
        if char not in dicto:
            dicto[char] = 1
        else:
            dicto[char] += 1

print('Char in text: ',count)
for char in dicto:
    dicto[char]=dicto[char]*1.0/count
#    print(dict[char])
    print(char, (dicto[char]))

enthropy = 0

for el in dicto:
#    print(math.log(dict[el],2))
    enthropy += - dicto[el]*math.log(dicto[el],2)
f.close()

dc_sort = sorted(dicto.items(),key = operator.itemgetter(1), reverse = True)

print(dc_sort)

for char in dicto:
    dict_code[char]=''

fano(dicto)

print('Result for coded: ', dict_code)

